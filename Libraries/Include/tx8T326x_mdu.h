/**
  ******************************************************************************
  * @file    mdu.h
  * @author  HUGE-IC Application Team
  * @version V1.0.0
  * @date    01-05-2021
  * @brief   This file contains all the MDU LL firmware functions.
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  *
  *
  */ 
  
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MDU_H__
#define __MDU_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/

/**********************************************************************
|---------------------------------------------------------------------|
|          | Bit |                    Description                     |
|          |----------------------------------------------------------|
|          |  7  | 操作数0地址翻页控制位                              |
|          |  6  | 操作数1地址翻页控制位                              |
|          |  5  | 结果地址翻页控制位                                 |
| MDU_CTL0 |  4  | 操作数种类选择  0x0:无符号操作数  0x1:有符号操作数 |
|          | 3:1 | 操作选择寄存器  0x0:16/16运算  0x1:32/16运算       |
|          |     |  0x2:16x16运算  0x3:开方运算   0x4:16-16运算       |
|          |     |  0x5:16+16运算  0x6:32-32运算  0x7:移位运算        |
|          |  0  | 每次使能进行一次运算,运算完自动清零                |
|---------------------------------------------------------------------|
**********************************************************************/
// MDU_CTL0
#define _MDU_CTL0
#define MDU_OPERAND0_ADR_H(n)     ((n) << 7)  // 操作数0地址翻页控制位
#define MDU_OPERAND1_ADR_H(n)     ((n) << 6)  // 操作数1地址翻页控制位
#define MDU_RESULT_ADR_H(n)       ((n) << 5)  // 结果地址翻页控制位
#define MDU_SIGN_SEL(n)           ((n) << 4)  // 操作数种类选择  0x0:无符号操作数  0x1:有符号操作数
#define MDU_OPERATION_SEL(n)      ((n) << 1)  // 操作选择寄存器  0x0:16/16运算  0x1:32/16运算
                                              //  0x2:16x16运算  0x3:开方运算   0x4:16-16运算
                                              //  0x5:16+16运算  0x6:32-32运算  0x7:移位运算
#define MDU_EN(n)                 ((n) << 0)  // 每次使能进行一次运算,运算完自动清零

/**********************************************************************
|---------------------------------------------------------------------|
|          | Bit |                    Description                     |
|          |----------------------------------------------------------|
|          | 7:6 |                                                    |
| MDU_CTL1 |  5  | 左移右移控制位  0x0:左移  0x1:右移                 |
|          | 4:0 | 移位位数控制位,最大32位                            |
|---------------------------------------------------------------------|
|          |     | Note:每一次操作完都会检查SIFT_NUM寄存器,如果不为零 |
|          |     |      则将该次操作结果移位.如不需移位要将SIFT_NUM置 |
|          |     |      零.移位是算术移位,溢出会补成最大值。          |
**********************************************************************/
// MDU_CTL1
#define _MDU_CTL1
#define MDU_SIFT_SEL(n)           ((n) << 5)  // 左移右移控制位  0x0:左移  0x1:右移
#define MDU_SIFT_NUM(n)           ((n) << 0)  // 移位位数控制位,最大32位

/**********************************************************************
|---------------------------------------------------------------------|
|          | Bit |                    Description                     |
|          |----------------------------------------------------------|
| MDU_ADR0 | 7:0 | 操作数0的地址                                      |
|---------------------------------------------------------------------|
**********************************************************************/
// MDU_ADR0
#define _MDU_ADR0
#define MDU_OPERAND0_ADR(n)       ((n) << 0)  // 操作数0的地址

/**********************************************************************
|---------------------------------------------------------------------|
|          | Bit |                    Description                     |
|          |----------------------------------------------------------|
| MDU_ADR1 | 7:0 | 操作数1的地址                                      |
|---------------------------------------------------------------------|
**********************************************************************/
// MDU_ADR1
#define _MDU_ADR1
#define MDU_OPERAND1_ADR(n)       ((n) << 0)  // 操作数1的地址

/**********************************************************************
|---------------------------------------------------------------------|
|          | Bit |                    Description                     |
|          |----------------------------------------------------------|
| MDU_ADR2 | 7:0 | 计算结果保存地址                                   |
|---------------------------------------------------------------------|
**********************************************************************/
// MDU_ADR2
#define _MDU_ADR2
#define MDU_RESULT_ADR(n)        ((n) << 0)  // 计算结果保存地址

/**********************************************************************
|---------------------------------------------------------------------|
|          | Bit |                    Description                     |
|          |----------------------------------------------------------|
|          | 7:3 |                                                    |
| MDU_STA  |  2  | 被除数为0错误标志位, 写1清零                       |
|          |  1  | 移位溢出标志位,写1清零                             |
|          |  0  | 加减法溢出标志位, 写1清零                          |
|---------------------------------------------------------------------|
**********************************************************************/
// MDU_STA
#define _MDU_STA
#define MDU_DIV_ERR_FLAG(n)      ((n) << 2)  // 被除数为0错误标志位, 写1清零
#define MDU_SHIFT_ERR_FLAG(n)    ((n) << 1)  // 移位溢出标志位,写1清零
#define MDU_ADDSUB_ERR_FLAG(n)   ((n) << 0)  // 加减法溢出标志位, 写1清零

/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/
/* Private function prototypes -----------------------------------------------*/
/* Private functions ---------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

#endif // __MDU_H__

/**
  * @}
  */

/**
  * @}
  */

/*************************** (C) COPYRIGHT 2021 HUGE-IC ***** END OF FILE *****/
