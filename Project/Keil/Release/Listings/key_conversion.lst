C51 COMPILER V9.60.7.0   KEY_CONVERSION                                                    11/11/2024 15:24:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEY_CONVERSION
OBJECT MODULE PLACED IN .\Release\Objects\key_conversion.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\key_conversion.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X0
                    -00C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Rel
                    -ease\Listings\key_conversion.lst) OBJECT(.\Release\Objects\key_conversion.obj)

line level    source

   1          // 将遥控器按键的键值转换成唯一的功能值的源文件
   2          #include "key_conversion.h"
   3          // #include "rf_learn.h"
   4          
   5          // 根据器件地址和键值，转换成键值对应的功能值
   6          // u8 key_to_funval(u16 addr, u8 key)
   7          // {
   8          //     u8 funval = 0x00;
   9          //     u8 remote_type = 0x55; // 存放遥控器类型的变量
  10          
  11          //     u8 i = 0;
  12          //     for (i = 0; i < ADDR_MAX_NUM; i++) // 根据地址，找到其对应的遥控器类型
  13          //     {
  14          //         if (addr_info.addr_buf[i] == addr)
  15          //         {
  16          //             remote_type = addr_info.remote_type[i];
  17          //             break;
  18          //         }
  19          //     }
  20          
  21          //     if (REMOTE_TYPE_SMALL_RM == remote_type)
  22          //     {
  23          //         // 如果是小遥控器
  24          //         // 根据它的键值来做转换
  25          //         switch (key)
  26          //         {
  27          //         case KEY_SMALL_RM_1: // 按键--上
  28          //             funval = KEY_FUNCTION_UP;
  29          //             break;
  30          //         case KEY_SMALL_RM_2: // 按键--左
  31          //             funval = KEY_FUNCTION_LEFT;
  32          //             break;
  33          //         case KEY_SMALL_RM_3: // 按键--电源
  34          //             funval = KEY_FUNCTION_POWER;
  35          //             break;
  36          //         case KEY_SMALL_RM_4: // 按键--右
  37          //             funval = KEY_FUNCTION_RIGHT;
  38          //             break;
  39          //         case KEY_SMALL_RM_5: // 按键--下
  40          //             funval = KEY_FUNCTION_DOWN;
  41          //             break;
  42          //         case KEY_SMALL_RM_6: // 按键--灯光、亮度
  43          //             funval = KEY_FUNCTION_LIGHT;
  44          //             break;
  45          //         case KEY_SMALL_RM_7: // 按键--音乐，按钮上是个音乐图标
  46          //             funval = KEY_FUNCTION_MUSIC_ICON;
  47          //             break;
  48          //         case KEY_SMALL_RM_8: // 按键--自动
  49          //             funval = KEY_FUNCTION_AUTO;
  50          //             break;
  51          //         case KEY_SMALL_RM_9: // 按键--列表
  52          //             funval = KEY_FUNCTION_LIST;
  53          //             break;
C51 COMPILER V9.60.7.0   KEY_CONVERSION                                                    11/11/2024 15:24:27 PAGE 2   

  54          //         case KEY_SMALL_RM_10: // 按键--RAINBOW，按钮上就是这个字样
  55          //             funval = KEY_FUNCTION_RAINBOW;
  56          //             break;
  57          //         }
  58          //     }
  59          //     else if (REMOTE_TYPE_BIG_RM == remote_type)
  60          //     {
  61          //         switch (key)
  62          //         {
  63          //         case KEY_BIG_RM_1: // 按键--电源
  64          //             funval = KEY_FUNCTION_POWER;
  65          //             break;
  66          //         case KEY_BIG_RM_2: // 按键--静音
  67          //             funval = KEY_FUNCTION_MUTE;
  68          //             break;
  69          //         case KEY_BIG_RM_3: // 按键--上
  70          //             funval = KEY_FUNCTION_UP;
  71          //             break;
  72          //         case KEY_BIG_RM_4: // 按键--左
  73          //             funval = KEY_FUNCTION_LEFT;
  74          //             break;
  75          //         case KEY_BIG_RM_5: // 按键--播放暂停
  76          //             funval = KEY_FUNCTION_PLAY_PAUSE;
  77          //             break;
  78          //         case KEY_BIG_RM_6: // 按键--右
  79          //             funval = KEY_FUNCTION_RIGHT;
  80          //             break;
  81          //         case KEY_BIG_RM_7: // 按键--下
  82          //             funval = KEY_FUNCTION_DOWN;
  83          //             break;
  84          //         case KEY_BIG_RM_8: // 按键--音乐，按钮上是个MUSIC字样
  85          //             funval = KEY_FUNCTION_MUSIC_FONT;
  86          //             break;
  87          //         case KEY_BIG_RM_9: // 按键--模式
  88          //             funval = KEY_FUNCTION_MODE;
  89          //             break;
  90          //         case KEY_BIG_RM_10: // 按键--影视，按钮上是MOVIE字样
  91          //             funval = KEY_FUNCTION_MOVIE;
  92          //             break;
  93          //         case KEY_BIG_RM_11: // 按键--TREB+，高音+
  94          //             funval = KEY_FUNCTION_TREB_ADD;
  95          //             break;
  96          //         case KEY_BIG_RM_12: // 按键--新闻，NEWS
  97          //             funval = KEY_FUNCTION_NEWS;
  98          //             break;
  99          //         case KEY_BIG_RM_13: // 按键--低音+，BASS+
 100          //             funval = KEY_FUNCTION_BASS_ADD;
 101          //             break;
 102          //         case KEY_BIG_RM_14: // 按键--高音-，TREB-
 103          //             funval = KEY_FUNCTION_TREB_SUB;
 104          //             break;
 105          //         case KEY_BIG_RM_15: // 按键--显示，DISPLAY
 106          //             funval = KEY_FUNCTION_DISPLAY;
 107          //             break;
 108          //         case KEY_BIG_RM_16: // 按键--低音-，BASS--
 109          //             funval = KEY_FUNCTION_BASS_SUB;
 110          //             break;
 111          //         }
 112          //     }
 113          
 114          //     return funval;
 115          // }
C51 COMPILER V9.60.7.0   KEY_CONVERSION                                                    11/11/2024 15:24:27 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
